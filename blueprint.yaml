tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.2/types.yaml
  - http://www.getcloudify.org/spec/kubernetes-plugin/1.4.0/plugin.yaml

inputs:

  kubernetes_master_ip:
    type: string
    default: { get_secret: kubernetes_master_ip }

  kubernetes_master_port:
    type: string
    default: { get_secret: kubernetes_master_port }

  kubernetes_certificate_authority_data:
    default: { get_secret: kubernetes_certificate_authority_data }

  kubernetes-admin_client_certificate_data:
    default: { get_secret: kubernetes-admin_client_certificate_data }

  kubernetes-admin_client_key_data:
    default: { get_secret: kubernetes-admin_client_key_data }

  kubernetes_master_configuration:
    default:
      apiVersion: v1
      kind: Config
      preferences: {}
      current-context: kubernetes-admin@kubernetes
      clusters:
      - name: kubernetes
        cluster:
          certificate-authority-data: { get_input: kubernetes_certificate_authority_data }
          server: { concat: [ 'https://', { get_input: kubernetes_master_ip}, ':', { get_input: kubernetes_master_port } ] }
      contexts:
      - name: kubernetes-admin@kubernetes
        context:
          cluster: kubernetes
          user: kubernetes-admin
      users:
      - name: kubernetes-admin
        user:
          client-certificate-data: { get_input: kubernetes-admin_client_certificate_data }
          client-key-data:  { get_input: kubernetes-admin_client_key_data }

  external_ip:
    description: >
      External IP for the nodecellar service. The IP of the desired Kubernetes node. Often the same as the node's private_ip.

  external_port:
    description: >
      External port for the nodecellar service
    default: 8080

node_templates:

  kubernetes_master:
    type: cloudify.kubernetes.nodes.Master
    properties:
      configuration:
        file_content: { get_input: kubernetes_master_configuration }

  nodecellar_node:
    type: cloudify.kubernetes.resources.Deployment
    properties:
      definition:
        apiVersion: extensions/v1beta1
        kind: Deployment
        metadata:
          name: nodecellar
          labels:
            wp16: nodecellar
        spec:
          replicas: 1
          selector:
            matchLabels:
              wp16: nodecellar
          template:
            metadata:
              labels:
                wp16: nodecellar
            spec:
              containers:
              - name: nodecellar
                image: uric/nodecellar
                imagePullPolicy: IfNotPresent
                stdin: true
                tty: true
                ports:
                - containerPort: 8080
                env:
                - name: NODECELLAR_PORT
                  value: "8080"
                - name: MONGO_PORT
                  value: "27017"
                - name: MONGO_HOST
                  value: "mongod"
                command:
                - nodejs
                args:
                - server.js
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: kubernetes_master
      - type: cloudify.relationships.depends_on
        target: mongo_node

  mongo_node:
    type: cloudify.kubernetes.resources.Deployment
    properties:
      definition:
        apiVersion: extensions/v1beta1
        kind: Deployment
        metadata:
          name: mongo
          labels:
            wp16: mongo
        spec:
          replicas: 1
          selector:
            matchLabels:
              wp16: mongo
          template:
            metadata:
              labels:
                wp16: mongo
            spec:
              containers:
              - name: mongo
                image: mongo:3.4
                imagePullPolicy: IfNotPresent
                stdin: true
                tty: true
                ports:
                - containerPort: 27017
                - containerPort: 28017
                command:
                - mongod
                args: ["--rest", "--httpinterface", "--smallfiles"]
    relationships:
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: kubernetes_master

  service:
    type: cloudify.kubernetes.resources.Service
    properties:
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          name: service-nodecellar
          labels:
            wp16: my-service
        spec:
          type: NodePort
          ports:
          - name: nodecellar
            port: { get_input: external_port}
            protocol: TCP
            targetPort: 8080
          selector:
            wp16: nodecellar
          externalIPs:
          - { get_input: external_ip }
    # Needed when setting clusterIP: None.
    interfaces:
      cloudify.interfaces.lifecycle:
        start: {}
    relationships:
      - type: cloudify.relationships.depends_on
        target: nodecellar_node
      - type: cloudify.kubernetes.relationships.managed_by_master
        target: kubernetes_master
